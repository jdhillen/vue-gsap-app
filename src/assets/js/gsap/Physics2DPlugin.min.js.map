{"version":3,"file":"Physics2DPlugin.min.js","sources":["../src/Physics2DPlugin.js"],"sourcesContent":["/*!\n * Physics2DPlugin 3.6.0\n * https://greensock.com\n *\n * @license Copyright 2008-2021, GreenSock. All rights reserved.\n * Subject to the terms at https://greensock.com/standard-license or for\n * Club GreenSock members, the agreement issued with that membership.\n * @author: Jack Doyle, jack@greensock.com\n*/\n/* eslint-disable */\n\nlet gsap, _coreInitted, _getUnit,\n\t_DEG2RAD = Math.PI / 180,\n\t_getGSAP = () => gsap || (typeof(window) !== \"undefined\" && (gsap = window.gsap) && gsap.registerPlugin && gsap),\n\t_round = value => Math.round(value * 10000) / 10000,\n\t_bonusValidated = 1, //<name>Physics2DPlugin</name>\n\t_initCore = core => {\n\t\tgsap = core || _getGSAP();\n\t\tif (!_coreInitted) {\n\t\t\t_getUnit = gsap.utils.getUnit;\n\t\t\t_coreInitted = 1;\n\t\t}\n\t};\n\nclass PhysicsProp {\n\n\tconstructor(target, p, velocity, acceleration, stepsPerTimeUnit) {\n\t\tlet cache = target._gsap,\n\t\t\tcurVal = cache.get(target, p);\n\t\tthis.p = p;\n\t\tthis.set = cache.set(target, p); //setter\n\t\tthis.s = this.val = parseFloat(curVal);\n\t\tthis.u = _getUnit(curVal) || 0;\n\t\tthis.vel = velocity || 0;\n\t\tthis.v = this.vel / stepsPerTimeUnit;\n\t\tif (acceleration || acceleration === 0) {\n\t\t\tthis.acc = acceleration;\n\t\t\tthis.a = this.acc / (stepsPerTimeUnit * stepsPerTimeUnit);\n\t\t} else {\n\t\t\tthis.acc = this.a = 0;\n\t\t}\n\t}\n\n}\n\n\nexport const Physics2DPlugin = {\n\tversion:\"3.6.0\",\n\tname:\"physics2D\",\n\tregister: _initCore,\n\tinit(target, value, tween) {\n\t\t_coreInitted || _initCore();\n\t\tlet data = this,\n\t\t\tangle = +value.angle || 0,\n\t\t\tvelocity = +value.velocity || 0,\n\t\t\tacceleration = +value.acceleration || 0,\n\t\t\txProp = value.xProp || \"x\",\n\t\t\tyProp = value.yProp || \"y\",\n\t\t\taAngle = (value.accelerationAngle || value.accelerationAngle === 0) ? +value.accelerationAngle : angle;\n\t\tdata.target = target;\n\t\tdata.tween = tween;\n\t\tdata.step = 0;\n\t\tdata.sps = 30; //steps per second\n\t\tif (value.gravity) {\n\t\t\tacceleration = +value.gravity;\n\t\t\taAngle = 90;\n\t\t}\n\t\tangle *= _DEG2RAD;\n\t\taAngle *= _DEG2RAD;\n\t\tdata.fr = 1 - (+value.friction || 0);\n\t\tdata._props.push(xProp, yProp);\n\n\t\tdata.xp = new PhysicsProp(target, xProp, Math.cos(angle) * velocity, Math.cos(aAngle) * acceleration, data.sps);\n\t\tdata.yp = new PhysicsProp(target, yProp, Math.sin(angle) * velocity, Math.sin(aAngle) * acceleration, data.sps);\n\t\tdata.skipX = data.skipY = 0;\n\t},\n\trender(ratio, data) {\n\t\tlet { xp, yp, tween, target, step, sps, fr, skipX, skipY } = data,\n\t\t\ttime = tween._from ? tween._dur - tween._time : tween._time,\n\t\t\tx, y, tt, steps, remainder, i;\n\t\tif (fr === 1) {\n\t\t\ttt = time * time * 0.5;\n\t\t\tx = xp.s + xp.vel * time + xp.acc * tt;\n\t\t\ty = yp.s + yp.vel * time + yp.acc * tt;\n\t\t} else {\n\t\t\ttime *= sps;\n\t\t\tsteps = i = (time | 0) - step;\n\t\t\t/*\n\t\t\tNote: rounding errors build up if we walk the calculations backward which we used to do like this to maximize performance:\n\t\t\t\ti = -i;\n\t\t\t\twhile (i--) {\n\t\t\t\t\txp.val -= xp.v;\n\t\t\t\t\typ.val -= yp.v;\n\t\t\t\t\txp.v /= fr;\n\t\t\t\t\typ.v /= fr;\n\t\t\t\t\txp.v -= xp.a;\n\t\t\t\t\typ.v -= yp.a;\n\t\t\t\t}\n\t\t\tbut now for the sake of accuracy (to ensure rewinding always goes back to EXACTLY the same spot), we force the calculations to go forward every time. So if the tween is going backward, we just start from the beginning and iterate. This is only necessary with friction.\n\t\t\t */\n\t\t\tif (i < 0) {\n\t\t\t\txp.v = xp.vel / sps;\n\t\t\t\typ.v = yp.vel / sps;\n\t\t\t\txp.val = xp.s;\n\t\t\t\typ.val = yp.s;\n\t\t\t\tdata.step = 0;\n\t\t\t\tsteps = i = time | 0;\n\t\t\t}\n\t\t\tremainder = (time % 1) * fr;\n\t\t\twhile (i--) {\n\t\t\t\txp.v += xp.a;\n\t\t\t\typ.v += yp.a;\n\t\t\t\txp.v *= fr;\n\t\t\t\typ.v *= fr;\n\t\t\t\txp.val += xp.v;\n\t\t\t\typ.val += yp.v;\n\t\t\t}\n\t\t\tx = xp.val + xp.v * remainder;\n\t\t\ty = yp.val + yp.v * remainder;\n\t\t\tdata.step += steps;\n\t\t}\n\t\tskipX || xp.set(target, xp.p, _round(x) + xp.u);\n\t\tskipY || yp.set(target, yp.p, _round(y) + yp.u);\n\t},\n\tkill(property) {\n\t\tif (this.xp.p === property) {\n\t\t\tthis.skipX = 1;\n\t\t}\n\t\tif (this.yp.p === property) {\n\t\t\tthis.skipY = 1;\n\t\t}\n\t}\n};\n\n\n_getGSAP() && gsap.registerPlugin(Physics2DPlugin);\n\nexport { Physics2DPlugin as default };"],"names":["_getGSAP","gsap","window","registerPlugin","_round","value","Math","round","_initCore","core","_coreInitted","_getUnit","utils","getUnit","PhysicsProp","target","p","velocity","acceleration","stepsPerTimeUnit","cache","_gsap","curVal","get","set","s","this","val","parseFloat","u","vel","v","acc","a","_DEG2RAD","PI","Physics2DPlugin","version","name","register","init","tween","data","angle","xProp","yProp","aAngle","accelerationAngle","step","sps","gravity","fr","friction","_props","push","xp","cos","yp","sin","skipX","skipY","render","ratio","x","y","tt","steps","remainder","i","time","_from","_dur","_time","kill","property"],"mappings":"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"}